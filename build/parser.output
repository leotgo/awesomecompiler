Terminals unused in grammar

   TK_PR_INT
   TK_PR_FLOAT
   TK_PR_BOOL
   TK_PR_CHAR
   TK_PR_STRING
   TK_PR_IF
   TK_PR_THEN
   TK_PR_ELSE
   TK_PR_WHILE
   TK_PR_DO
   TK_PR_INPUT
   TK_PR_OUTPUT
   TK_PR_RETURN
   TK_PR_STATIC
   TK_PR_CONST
   TK_OC_LE
   TK_OC_GE
   TK_OC_EQ
   TK_OC_NE
   TK_OC_AND
   TK_OC_OR
   TK_LIT_INT
   TK_LIT_FLOAT
   TK_LIT_FALSE
   TK_LIT_TRUE
   TK_LIT_CHAR
   TK_LIT_STRING
   TK_IDENTIFICADOR
   TOKEN_ERRO


Grammar

    0 $accept: programa $end

    1 programa: %empty


Terminals, with rules where they appear

$end (0) 0
error (256)
TK_PR_INT (258)
TK_PR_FLOAT (259)
TK_PR_BOOL (260)
TK_PR_CHAR (261)
TK_PR_STRING (262)
TK_PR_IF (263)
TK_PR_THEN (264)
TK_PR_ELSE (265)
TK_PR_WHILE (266)
TK_PR_DO (267)
TK_PR_INPUT (268)
TK_PR_OUTPUT (269)
TK_PR_RETURN (270)
TK_PR_STATIC (271)
TK_PR_CONST (272)
TK_OC_LE (273)
TK_OC_GE (274)
TK_OC_EQ (275)
TK_OC_NE (276)
TK_OC_AND (277)
TK_OC_OR (278)
TK_LIT_INT (279)
TK_LIT_FLOAT (280)
TK_LIT_FALSE (281)
TK_LIT_TRUE (282)
TK_LIT_CHAR (283)
TK_LIT_STRING (284)
TK_IDENTIFICADOR (285)
TOKEN_ERRO (286)


Nonterminals, with rules where they appear

$accept (32)
    on left: 0
programa (33)
    on left: 1, on right: 0


State 0

    0 $accept: . programa $end

    $default  reduce using rule 1 (programa)

    programa  go to state 1


State 1

    0 $accept: programa . $end

    $end  shift, and go to state 2


State 2

    0 $accept: programa $end .

    $default  accept
